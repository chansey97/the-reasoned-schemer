#lang racket
(require "../../libs/trs/mk.rkt")
(require "./eqlo.rkt")
(require "./ltlo.rkt")
(provide (all-defined-out))

; 8.42
(define <=lo
  (lambda (n m)
    (condi
     ((=lo n m) succeed)
     ((<lo n m) succeed)
     (else fail))))

(module+ main
  (require "../../libs/trs/mkextraforms.rkt")
  (require "../../libs/test-harness.rkt")
  (require "../mulo_2_correct.rkt")
  
  (test-check "8.43"
              (run 10 (t)
                   (fresh (n m)
                          (<=lo n m)
                          (*o n '(0 1) m)
                          (== `(,n ,m) t)))
              `((() ())
                ((1) (0 1))
                ((0 1) (0 0 1))
                ((1 1) (0 1 1))
                ((0 0 1) (0 0 0 1))
                ((1 _.0 1) (0 1 _.0 1))
                ((0 1 1) (0 0 1 1))
                ((0 0 0 1) (0 0 0 0 1))
                ((1 _.0 _.1 1) (0 1 _.0 _.1 1))
                ((0 1 _.0 1) (0 0 1 _.0 1))))

  (test-check "8.44"
              (run 15 (t)
                   (fresh (n m)
                          (<=lo n m)
                          (== `(,n ,m) t)))
              `((() ())
                (() (_.0 . _.1))
                ((1) (1))
                ((1) (_.0 _.1 . _.2))
                ((_.0 1) (_.1 1))
                ((_.0 1) (_.1 _.2 _.3 . _.4))
                ((_.0 _.1 1) (_.2 _.3 1))
                ((_.0 _.1 1) (_.2 _.3 _.4 _.5 . _.6))
                ((_.0 _.1 _.2 1) (_.3 _.4 _.5 1))
                ((_.0 _.1 _.2 1) (_.3 _.4 _.5 _.6 _.7 . _.8))
                ((_.0 _.1 _.2 _.3 1) (_.4 _.5 _.6 _.7 1))
                ((_.0 _.1 _.2 _.3 1) (_.4 _.5 _.6 _.7 _.8 _.9 . _.10))
                ((_.0 _.1 _.2 _.3 _.4 1) (_.5 _.6 _.7 _.8 _.9 1))
                ((_.0 _.1 _.2 _.3 _.4 1) (_.5 _.6 _.7 _.8 _.9 _.10 _.11 . _.12))
                ((_.0 _.1 _.2 _.3 _.4 _.5 1) (_.6 _.7 _.8 _.9 _.10 _.11 1))))
  )
